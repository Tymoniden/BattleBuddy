@page "/"
@using BattleBuddy.WebApp.StateContainers
@using BattleBuddy.WebApp.Services.SignalR

@inject SessionConfiguration SessionConfiguration
@inject SignalRMessageFactory MessageFactory
@inject SignalRMessagingService MessagingService

<PageTitle>Index</PageTitle>

<div class="d-flex justify-content-around align-items-center mb-2">
    <input type="radio" class="btn-check" name="player-selection" id="left-player" checked="@(SessionConfiguration.ParticipantRole == Participants.PlayerA)" @onchange="() => SessionConfiguration.ParticipantRole = Participants.PlayerA" autocomplete="off">
    <label class="btn btn-outline-primary flex-fill" for="left-player">Left</label>

    <input type="radio" class="btn-check" name="player-selection" id="right-player" checked="@(SessionConfiguration.ParticipantRole == Participants.PlayerB)" @onchange="() => SessionConfiguration.ParticipantRole = Participants.PlayerB" autocomplete="off">
    <label class="btn btn-outline-primary flex-fill" for="right-player">Right</label>
</div>

<div class="d-flex flex-column">
    <div class="btn btn-primary mt-1" @onclick="UpdateLists">
        <span>Update lists</span>
    </div>
    
    <div class="btn btn-primary mt-1" @onclick="ToggleQrCode">
        <span>Toggle QR code</span>
    </div>
</div>

@code{
    async Task UpdateLists()
    {
        await MessagingService.SendMessage(MessageFactory.CreateRequestListUpdateMessage());
    }

    async Task ToggleQrCode()
    {
        await MessagingService.SendMessage(MessageFactory.CreateRequestToggleQrCodeMessage());
    }

    void UpdateUi(object? sender, EventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        await MessagingService.Initialize();
        SessionConfiguration.OnChange += UpdateUi;

        await base.OnInitializedAsync();
    }

    public async ValueTask DisposeAsync()
    {
        SessionConfiguration.OnChange -= UpdateUi;
        await MessagingService.Dispose();
    }
}