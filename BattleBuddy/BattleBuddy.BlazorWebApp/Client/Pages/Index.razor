@page "/"
@using BattleBuddy.BlazorWebApp.Client.Services;
@using BattleBuddy.BlazorWebApp.Shared.Enums;

@inject IListViewInteractionFacade listViewInteractionFacade;

<PageTitle>List view</PageTitle>

<style type="text/css">
    /* page */
    article.content{
        padding-top: 0.5rem;
        padding-left: 0.5rem;
        padding-right: 0.5rem;
    }


    /* buttons */
    div.buttons{
        display: flex;
        justify-content: space-between;
    }

    button.button {
        width: 72px;
        background-size: 70px;
        height: 48px;
        background-color: transparent;
        border: 0px;
    }

        button.button.active{
            border: 1px solid black;
            border-radius: 7px;
        }

        button.button.focus-left{
                background-image: url("Images/Icons/focus_left_button.png");
        }

        button.button.focus-right {
            background-image: url("Images/Icons/focus_right_button.png");
        }

        button.button.justify {
            background-image: url("Images/Icons/justify_button.png");
        }

        button.button.refresh {
            background-image: url("Images/Icons/refresh_button.png");
        }

    /* Entry table */
    div.entry-table {
        margin-top: 10px;
        display: flex;
        justify-content: space-between;
    }

        div.entry-table ul{
            list-style-type: none;
            padding: 0px;
        }

            div.entry-table ul li{
                width: 150px;
                padding: 5px 10px;
                background-color: cadetblue;
                color: white;
                margin-bottom: 2px;
            }

                div.entry-table ul li.selected{
                    background-color: cornflowerblue;
                }
</style>

<div class="buttons">
    <button class="button focus-left" @onclick="@(e => RequestFocus(ExpansionTarget.Left))"></button>
    <button class="button justify" @onclick="@(e => RequestFocus(ExpansionTarget.None))"></button>
    <button class="button focus-right" @onclick="@(e => RequestFocus(ExpansionTarget.Right))"></button>
    <button class="button refresh" @onclick="@(e => RequestReload())"></button>
</div>

<div class="entry-table">
    <BattleBuddy.BlazorWebApp.Client.Controls.ListView ListViewIdentifier="ListViewIdentifier.Left" />
    <BattleBuddy.BlazorWebApp.Client.Controls.ListView ListViewIdentifier="ListViewIdentifier.Right" />
</div>

@*<div class="entry-table">
    <table style="margin-top:10px;">
        <tbody>
            <tr>
                <td style="vertical-align: top">
                    <BattleBuddy.BlazorWebApp.Client.Controls.ListView ListViewIdentifier="ListViewIdentifier.Left"/>
                </td>
                <td style="vertical-align: top">
                    <BattleBuddy.BlazorWebApp.Client.Controls.ListView ListViewIdentifier="ListViewIdentifier.Right" />
                </td>
            </tr>
        </tbody>
    </table>
</div>*@

@code{
    async Task RequestFocus(ExpansionTarget target)
    {
        switch (target)
        {
            case ExpansionTarget.Left:
                await listViewInteractionFacade.ExpandLeft();
                break;
            case ExpansionTarget.Right:
                await listViewInteractionFacade.ExpandRight();
                break;
            case ExpansionTarget.None:
                await listViewInteractionFacade.JustifyBoth();
                break;
        }
    }

    async Task RequestReload() => await listViewInteractionFacade.ReloadLists();
}